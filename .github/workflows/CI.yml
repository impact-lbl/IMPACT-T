name: CI

on: [push, pull_request]

jobs:
  make:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        mpi: ["nompi", "openmpi", "mpich"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install GFortran
        run: |
          sudo apt-get update
          sudo apt install gfortran make

      - name: Install MPI - ${{ matrix.mpi }}
        if: matrix.mpi != 'nompi'
        run: |
          sudo apt-get update
          sudo apt install lib${{ matrix.mpi }}-dev

      - name: Build - No MPI
        if: matrix.mpi == 'nompi'
        run: |
          cd src/
          make FC=gfortran LINK=gfortran

      - name: Build - MPI - ${{ matrix.mpi }}
        if: matrix.mpi != 'nompi'
        run: |
          cd src/
          FFLAGS="$FFLAGS -fallow-argument-mismatch" make FC=mpifort LINK=mpifort USE_MPI=1

      - name: Test - No MPI
        if: matrix.mpi == 'nompi'
        run: |
          cd $GITHUB_WORKSPACE/examples/Sample1
          $GITHUB_WORKSPACE/src/ImpactTexe

      - name: Test - mpich
        if: matrix.mpi == 'mpich'
        run: |
          cd $GITHUB_WORKSPACE/examples/Sample1
          # NOTE: MPICH on GitHub Actions runners fail to allocate more than 1
          # process for the communicator. We're only testing that the MPI
          # executable doesn't fail outright here.
          mpirun -n 1 $GITHUB_WORKSPACE/src/ImpactTexe-mpi

      - name: Test - OpenMPI
        if: matrix.mpi == 'openmpi'
        run: |
          cd $GITHUB_WORKSPACE/examples/Sample1
          sed -i"" '5s/1 1/2 1/' ImpactT.in
          mpirun -n 2 $GITHUB_WORKSPACE/src/ImpactTexe-mpi

  cmake:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        mpi: [nompi, openmpi, mpich]
    steps:
      - uses: actions/checkout@v2
      - name: Install GFortran
        run: |
          sudo apt-get update
          sudo apt install gfortran cmake

      - name: Install MPI - ${{ matrix.mpi }}
        if: matrix.mpi != 'nompi'
        run: |
          sudo apt-get update
          sudo apt install lib${{ matrix.mpi }}-dev

      - name: Build - No MPI
        if: matrix.mpi == 'nompi'
        run: |
          mkdir build
          cd build
          cmake ../src
          make

      - name: Build - MPI - ${{ matrix.mpi }}
        if: matrix.mpi != 'nompi'
        run: |
          mkdir build
          cd build
          cmake ../src -DUSE_MPI=ON
          make

      - name: Test - No MPI
        if: matrix.mpi == 'nompi'
        run: |
          cd $GITHUB_WORKSPACE/examples/Sample1
          $GITHUB_WORKSPACE/build/ImpactTexe

      - name: Test - mpich
        if: matrix.mpi == 'mpich'
        run: |
          cd $GITHUB_WORKSPACE/examples/Sample1
          # NOTE: MPICH on GitHub Actions runners fail to allocate more than 1
          # process for the communicator. We're only testing that the MPI
          # executable doesn't fail outright here.
          mpirun -n 1 $GITHUB_WORKSPACE/build/ImpactTexe-mpi

      - name: Test - OpenMPI
        if: matrix.mpi == 'openmpi'
        run: |
          cd $GITHUB_WORKSPACE/examples/Sample1
          sed -i"" '5s/1 1/2 1/' ImpactT.in
          mpirun -n 2 $GITHUB_WORKSPACE/build/ImpactTexe-mpi

      - uses: actions/upload-artifact@v4
        if: matrix.mpi != 'nompi'
        with:
          name: ImpactT-${{ matrix.os }}-${{ matrix.mpi }}
          path: build/ImpactTexe-mpi

      - uses: actions/upload-artifact@v4
        if: matrix.mpi == 'nompi'
        with:
          name: ImpactT-${{ matrix.os }}-${{ matrix.mpi }}
          path: build/ImpactTexe
